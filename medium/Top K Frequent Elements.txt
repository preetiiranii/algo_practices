347. Top K Frequent Elements
Medium
3833
235
Add to List
Share

Given a non-empty array of integers, return the k most frequent elements.

Example 1:

Input: nums = [1,1,1,2,2,3], k = 2
Output: [1,2]

Example 2:

Input: nums = [1], k = 1
Output: [1]

Note:

    You may assume k is always valid, 1 ≤ k ≤ number of unique elements.
    Your algorithm's time complexity must be better than O(n log n), where n is the array's size.
    It's guaranteed that the answer is unique, in other words the set of the top k frequent elements is unique.
    You can return the answer in any order.





==========================================================================

class Solution(object):
    def topKFrequent(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: List[int]
        """
        occur = {}
        result = []
        for n in nums:
            occur[n] = occur.get(n, 0) + 1
        
        occur_sorted = sorted(occur.items(), key = lambda x: x[1], reverse = True) 
            
        return map(lambda x:x[0], occur_sorted)[:k]