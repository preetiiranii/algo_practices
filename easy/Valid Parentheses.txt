20. Valid Parentheses
Easy
5846
243
Add to List
Share

Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

    Open brackets must be closed by the same type of brackets.
    Open brackets must be closed in the correct order.

 

Example 1:

Input: s = "()"
Output: true

Example 2:

Input: s = "()[]{}"
Output: true

Example 3:

Input: s = "(]"
Output: false

Example 4:

Input: s = "([)]"
Output: false

Example 5:

Input: s = "{[]}"
Output: true

 

Constraints:

    1 <= s.length <= 104
    s consists of parentheses only '()[]{}'.




==========================================================================


class Solution(object):
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        if s is None:
            return
      
        brackets = {"[" : "]", "{" : "}", "(" : ")"}
        stack = []
        
        for bracket in s:
            if bracket in brackets:
                stack.append(bracket)
            elif len(stack) != 0 and brackets[stack.pop()] == bracket:
                continue
            else:
                return False
        
        return len(stack) == 0
                